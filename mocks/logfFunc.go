// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	zap "go.uber.org/zap"
)

// logfFunc is an autogenerated mock type for the logfFunc type
type logfFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, msg, args
func (_m *logfFunc) Execute(_a0 *zap.SugaredLogger, msg string, args ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, _a0, msg)
	_ca = append(_ca, args...)
	_m.Called(_ca...)
}

type mockConstructorTestingTnewLogfFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newLogfFunc creates a new instance of logfFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newLogfFunc(t mockConstructorTestingTnewLogfFunc) *logfFunc {
	mock := &logfFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
