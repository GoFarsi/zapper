// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	zapcore "go.uber.org/zap/zapcore"
)

// encoderFunc is an autogenerated mock type for the encoderFunc type
type encoderFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *encoderFunc) Execute(_a0 zapcore.EncoderConfig) zapcore.Encoder {
	ret := _m.Called(_a0)

	var r0 zapcore.Encoder
	if rf, ok := ret.Get(0).(func(zapcore.EncoderConfig) zapcore.Encoder); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(zapcore.Encoder)
		}
	}

	return r0
}

type mockConstructorTestingTnewEncoderFunc interface {
	mock.TestingT
	Cleanup(func())
}

// newEncoderFunc creates a new instance of encoderFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newEncoderFunc(t mockConstructorTestingTnewEncoderFunc) *encoderFunc {
	mock := &encoderFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
